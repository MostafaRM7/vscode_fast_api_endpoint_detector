name: Release VS Code Extension

on:
  push:
    branches:
      - main

jobs:
  release:
    # Use your self-hosted runner
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: npm install

      - name: Install vsce
        run: npm install -g vsce

      - name: Bump version
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          npm version patch -m "chore: release v%s"
      
      - name: Get extension version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Package extension
        run: vsce package

      - name: Push new version to main
        run: git push && git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Visual Studio Marketplace
        run: vsce publish -p ${{ secrets.VSCE_PAT }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: v${{ steps.get_version.outputs.version }}
          body: |
            Release of version v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload VSIX to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fastapi-endpoint-detector-${{ steps.get_version.outputs.version }}.vsix
          asset_name: fastapi-endpoint-detector-${{ steps.get_version.outputs.version }}.vsix
          asset_content_type: application/zip